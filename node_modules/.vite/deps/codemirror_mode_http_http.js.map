{
  "version": 3,
  "sources": ["../../codemirror/mode/http/http.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"http\", function() {\n  function failFirstLine(stream, state) {\n    stream.skipToEnd();\n    state.cur = header;\n    return \"error\";\n  }\n\n  function start(stream, state) {\n    if (stream.match(/^HTTP\\/\\d\\.\\d/)) {\n      state.cur = responseStatusCode;\n      return \"keyword\";\n    } else if (stream.match(/^[A-Z]+/) && /[ \\t]/.test(stream.peek())) {\n      state.cur = requestPath;\n      return \"keyword\";\n    } else {\n      return failFirstLine(stream, state);\n    }\n  }\n\n  function responseStatusCode(stream, state) {\n    var code = stream.match(/^\\d+/);\n    if (!code) return failFirstLine(stream, state);\n\n    state.cur = responseStatusText;\n    var status = Number(code[0]);\n    if (status >= 100 && status < 200) {\n      return \"positive informational\";\n    } else if (status >= 200 && status < 300) {\n      return \"positive success\";\n    } else if (status >= 300 && status < 400) {\n      return \"positive redirect\";\n    } else if (status >= 400 && status < 500) {\n      return \"negative client-error\";\n    } else if (status >= 500 && status < 600) {\n      return \"negative server-error\";\n    } else {\n      return \"error\";\n    }\n  }\n\n  function responseStatusText(stream, state) {\n    stream.skipToEnd();\n    state.cur = header;\n    return null;\n  }\n\n  function requestPath(stream, state) {\n    stream.eatWhile(/\\S/);\n    state.cur = requestProtocol;\n    return \"string-2\";\n  }\n\n  function requestProtocol(stream, state) {\n    if (stream.match(/^HTTP\\/\\d\\.\\d$/)) {\n      state.cur = header;\n      return \"keyword\";\n    } else {\n      return failFirstLine(stream, state);\n    }\n  }\n\n  function header(stream) {\n    if (stream.sol() && !stream.eat(/[ \\t]/)) {\n      if (stream.match(/^.*?:/)) {\n        return \"atom\";\n      } else {\n        stream.skipToEnd();\n        return \"error\";\n      }\n    } else {\n      stream.skipToEnd();\n      return \"string\";\n    }\n  }\n\n  function body(stream) {\n    stream.skipToEnd();\n    return null;\n  }\n\n  return {\n    token: function(stream, state) {\n      var cur = state.cur;\n      if (cur != header && cur != body && stream.eatSpace()) return null;\n      return cur(stream, state);\n    },\n\n    blankLine: function(state) {\n      state.cur = body;\n    },\n\n    startState: function() {\n      return {cur: start};\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"message/http\", \"http\");\n\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AAGA,KAAC,SAAS,KAAK;AACb,UAAI,OAAO,WAAW,YAAY,OAAO,UAAU;AACjD,YAAI,oBAA+B;AAAA,eAC5B,OAAO,UAAU,cAAc,OAAO;AAC7C,eAAO,CAAC,sBAAsB,GAAG,GAAG;AAAA;AAEpC,YAAI,UAAU;AAAA,IAClB,GAAG,SAASA,aAAY;AACxB;AAEA,MAAAA,YAAW,WAAW,QAAQ,WAAW;AACvC,iBAAS,cAAc,QAAQ,OAAO;AACpC,iBAAO,UAAU;AACjB,gBAAM,MAAM;AACZ,iBAAO;AAAA,QACT;AAEA,iBAAS,MAAM,QAAQ,OAAO;AAC5B,cAAI,OAAO,MAAM,eAAe,GAAG;AACjC,kBAAM,MAAM;AACZ,mBAAO;AAAA,UACT,WAAW,OAAO,MAAM,SAAS,KAAK,QAAQ,KAAK,OAAO,KAAK,CAAC,GAAG;AACjE,kBAAM,MAAM;AACZ,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO,cAAc,QAAQ,KAAK;AAAA,UACpC;AAAA,QACF;AAEA,iBAAS,mBAAmB,QAAQ,OAAO;AACzC,cAAI,OAAO,OAAO,MAAM,MAAM;AAC9B,cAAI,CAAC;AAAM,mBAAO,cAAc,QAAQ,KAAK;AAE7C,gBAAM,MAAM;AACZ,cAAI,SAAS,OAAO,KAAK,EAAE;AAC3B,cAAI,UAAU,OAAO,SAAS,KAAK;AACjC,mBAAO;AAAA,UACT,WAAW,UAAU,OAAO,SAAS,KAAK;AACxC,mBAAO;AAAA,UACT,WAAW,UAAU,OAAO,SAAS,KAAK;AACxC,mBAAO;AAAA,UACT,WAAW,UAAU,OAAO,SAAS,KAAK;AACxC,mBAAO;AAAA,UACT,WAAW,UAAU,OAAO,SAAS,KAAK;AACxC,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,iBAAS,mBAAmB,QAAQ,OAAO;AACzC,iBAAO,UAAU;AACjB,gBAAM,MAAM;AACZ,iBAAO;AAAA,QACT;AAEA,iBAAS,YAAY,QAAQ,OAAO;AAClC,iBAAO,SAAS,IAAI;AACpB,gBAAM,MAAM;AACZ,iBAAO;AAAA,QACT;AAEA,iBAAS,gBAAgB,QAAQ,OAAO;AACtC,cAAI,OAAO,MAAM,gBAAgB,GAAG;AAClC,kBAAM,MAAM;AACZ,mBAAO;AAAA,UACT,OAAO;AACL,mBAAO,cAAc,QAAQ,KAAK;AAAA,UACpC;AAAA,QACF;AAEA,iBAAS,OAAO,QAAQ;AACtB,cAAI,OAAO,IAAI,KAAK,CAAC,OAAO,IAAI,OAAO,GAAG;AACxC,gBAAI,OAAO,MAAM,OAAO,GAAG;AACzB,qBAAO;AAAA,YACT,OAAO;AACL,qBAAO,UAAU;AACjB,qBAAO;AAAA,YACT;AAAA,UACF,OAAO;AACL,mBAAO,UAAU;AACjB,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,iBAAS,KAAK,QAAQ;AACpB,iBAAO,UAAU;AACjB,iBAAO;AAAA,QACT;AAEA,eAAO;AAAA,UACL,OAAO,SAAS,QAAQ,OAAO;AAC7B,gBAAI,MAAM,MAAM;AAChB,gBAAI,OAAO,UAAU,OAAO,QAAQ,OAAO,SAAS;AAAG,qBAAO;AAC9D,mBAAO,IAAI,QAAQ,KAAK;AAAA,UAC1B;AAAA,UAEA,WAAW,SAAS,OAAO;AACzB,kBAAM,MAAM;AAAA,UACd;AAAA,UAEA,YAAY,WAAW;AACrB,mBAAO,EAAC,KAAK,MAAK;AAAA,UACpB;AAAA,QACF;AAAA,MACF,CAAC;AAED,MAAAA,YAAW,WAAW,gBAAgB,MAAM;AAAA,IAE5C,CAAC;AAAA;AAAA;",
  "names": ["CodeMirror"]
}
