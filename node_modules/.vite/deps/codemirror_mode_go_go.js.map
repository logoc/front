{
  "version": 3,
  "sources": ["../../codemirror/mode/go/go.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"go\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n    \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n    \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n    \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n    \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n    \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n    \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n    \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n    \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n    \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n    \"rune\":true, \"any\":true, \"comparable\":true\n  };\n\n  var atoms = {\n    \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n    \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n    \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n    \"println\":true, \"real\":true, \"recover\":true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\n      } else {\n        stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\n      }\n      return \"number\";\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n      }\n      if (end || !(escaped || quote == \"`\"))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        if (ctx.type == \"case\") ctx.type = \"}\";\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"case\") ctx.type = \"case\";\n      else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n      else if (curPunc == ctx.type) popContext(state);\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n        state.context.type = \"}\";\n        return ctx.indented;\n      }\n      var closing = firstChar == ctx.type;\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}):\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"brace\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-go\", \"go\");\n\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror"]
}
